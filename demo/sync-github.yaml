---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: github-remote-triggertemplate-sync
spec:
  params:
  - name: gitrevision
    description: The git revision
    default: main
  - name: message
    description: The message to print
    default: This is the default message
  - name: contenttype
    description: The Content-Type of the event
    default: text/plain
  - name: repo-url
    description: The git repository url
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      annotations:
        chains.tekton.dev/signed: 'true'
      generateName: import-resources-
      labels:
        dashboard.tekton.dev/import: 'true'
        gitOrg: martinmlouis
        gitRepo: leidos
        gitServer: github.com
      namespace: default
    spec:
      params:
        - name: method
          value: apply
        - name: path
          value: demo
        - name: repositoryURL
          value: https://github.com/martinmlouis/leidos.git
        - name: revision
          value: main
        - name: target-namespace
          value: default
      pipelineSpec:
        params:
          - default: apply
            description: Which kubectl command to use to import the resources (apply / create)
            name: method
            type: string
          - default: .
            description: The path from which resources are to be imported
            name: path
            type: string
          - description: The URL of the git repository from which resources are to be imported
            name: repositoryURL
            type: string
          - default: ''
            description: The git revision from which resources are to be imported
            name: revision
            type: string
          - default: tekton-pipelines
            description: The namespace in which to create the resources being imported
            name: target-namespace
            type: string
        tasks:
          - name: fetch-source
            taskRef:
            name: git-clone
            workspaces:
            - name: output
              workspace: repo
            - name: basic-auth
              workspace: git-credentials
            params:
            - name: url
              value: $(params.repo-url)

          - name: import-resources
            params:
              - name: path
                value: $(params.path)
              - name: target-namespace
                value: $(params.target-namespace)
              - name: method
                value: $(params.method)
            runAfter:
              - fetch-repo
            taskSpec:
              metadata: {}
              params:
                - description: The path from which resources are to be imported
                  name: path
                  type: string
                - description: The namespace in which to create the resources being imported
                  name: target-namespace
                  type: string
                - description: >-
                    Which kubectl command to use to import the resources (apply /
                    create)
                  name: method
                  type: string
              spec: null
              steps:
                - args:
                    - $(params.method)
                    - '-f'
                    - $(workspaces.repo.path)/$(params.path)
                    - '-n'
                    - $(params.target-namespace)
                  command:
                    - kubectl
                  computeResources: {}
                  image: lachlanevenson/k8s-kubectl:latest
                  name: import
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
              workspaces:
                - name: repo
            workspaces:
              - name: repo
                workspace: repo
      taskRunTemplate:
        podTemplate:
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
        serviceAccountName: tekton-triggers-sa
      timeouts:
        pipeline: 1h0m0s
      workspaces:
        - name: repo
          volumeClaimTemplate:
            metadata:
              creationTimestamp: null
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
            status: {}

