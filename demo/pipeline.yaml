apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clone-read
spec:
  description: | 
    This pipeline clones a git repo, then echoes the README file to the stout.
  params:
  - name: repo-url
    type: string
    description: The git repo URL to clone from.
  - name: builder-image-argocd-application-set
    type: string
    description: The build image used to build and push argocd application set.
  - name: builder-image-argocd-application-set-repo-url
    type: string
    description: The build repo to use to trigger argocd deployments.
  - name: branch
    type: string
    description: The git repo BRANCH to clone from.      
  workspaces:
  - name: shared-data
    description: | 
      This workspace contains the cloned repo files, so they can be read by the
      next task.
  - name: git-credentials
    description: My basic-auth credentials
  - name: harbor-access-secret
    description: Credentials to use to push to harbor registry.

  tasks:
  - name: fetch-source
    taskRef:
      resolver: git
      params:
        - name: url
          value: https://github.com/martinmlouis/github_builds.git
        - name: pathInRepo
          value: tekton-resources/git-clone.yaml
        - name: revision
          value: $(params.branch)
    params:
    - name: url
      value: $(params.repo-url)
    - name: branch
      value: $(params.branch)
    workspaces:
    - name: output
      workspace: shared-data
    - name: basic-auth
      workspace: git-credentials

##  - name: fetch-source
##    taskRef:
##      name: git-clone
##    workspaces:
##    - name: output
##      workspace: shared-data
##    - name: basic-auth
##      workspace: git-credentials
##    params:
##    - name: url
##      value: $(params.repo-url)
#
##  - name: fetch-source-argocd-deployments
##    taskRef:
##      name: git-clone
##    workspaces:
##    - name: output
##      workspace: shared-data
##    - name: basic-auth
##      workspace: git-credentials
##    params:
##    - name: url
##      value: $(params.builder-image-argocd-application-set-repo-url)
  - name: show-readme
    runAfter: ["fetch-source"]
    taskRef:
      name: show-readme
    workspaces:
    - name: source
      workspace: shared-data
  - name: build-push-argocd-application-set
    runAfter: ["fetch-source"]
    taskRef:
      name: build-push-argocd-application-set
    params:
    - name: BUILDER_IMAGE_ARGOCD_APPLICATION_SET
      value: $(params.builder-image-argocd-application-set)
    workspaces:
    - name: source
      workspace: shared-data
    - name: harbor-access-secret
      workspace: harbor-access-secret
  - name: show-readme-github
    runAfter: ["fetch-source"]
    taskRef:
      resolver: git
      params:
        - name: url
          value: https://github.com/martinmlouis/leidos.git
        - name: pathInRepo
          value: demo/show-readme.yaml
    workspaces:
    - name: basic-auth
      workspace: git-credentials
    - name: source
      workspace: shared-data
#  - name: import-resources
#    runAfter: ["fetch-source"]
#    taskRef:
#      name: import-resources
#    workspaces:
#    - name: shared-data
#      workspace: shared-data
#    params:
#    - name: path 
#      value: "demo"
         
  - name: kaniko-build-push-argocd-harbor
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: harbor-access-secret
    params:
    - name: BUILDER_IMAGE
      value: "gcr.io/kaniko-project/executor:latest"
    - name: IMAGE
      value: "harbor.35.212.92.161.nip.io/leidos/argocd:1.16.0"
    - name: DOCKERFILE
      value: "builds/argocd-Dockerfile"
    - name: CONTEXT
      value: "builds"
    - name: EXTRA_ARGS
      value: 
        - --skip-tls-verify
        - --cleanup
        - --insecure
         
  - name: kaniko-build-push-helm-harbor
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: harbor-access-secret
    params:
    - name: BUILDER_IMAGE
      value: "gcr.io/kaniko-project/executor:latest"
    - name: IMAGE
      value: "harbor.35.212.92.161.nip.io/leidos/helm:3.16.1"
    - name: DOCKERFILE
      value: "builds/helm-Dockerfile"
    - name: CONTEXT
      value: "builds"
    - name: EXTRA_ARGS
      value: 
        - --skip-tls-verify
        - --cleanup
        - --insecure

  - name: kaniko-build-push-perl-harbor
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: harbor-access-secret
    params:
    - name: BUILDER_IMAGE
      value: "gcr.io/kaniko-project/executor:latest"
    - name: IMAGE
      value: "harbor.35.212.92.161.nip.io/leidos/perl:5.36.2"
    - name: DOCKERFILE
      value: "builds/perl-Dockerfile"
    - name: CONTEXT
      value: "builds"
    - name: EXTRA_ARGS
      value: 
        - --skip-tls-verify
        - --cleanup
        - --insecure
